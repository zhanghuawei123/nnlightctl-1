<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nnlightctl.dao.FirewareUploadRecordMapper" >
  <resultMap id="BaseResultMap" type="com.nnlightctl.po.FirewareUploadRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP" />
    <result column="gmt_updated" property="gmtUpdated" jdbcType="TIMESTAMP" />
    <result column="fireware_version" property="firewareVersion" jdbcType="VARCHAR" />
    <result column="package_number" property="packageNumber" jdbcType="SMALLINT" />
    <result column="last_package_size" property="lastPackageSize" jdbcType="TINYINT" />
    <result column="persist1" property="persist1" jdbcType="VARCHAR" />
    <result column="persist2" property="persist2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, gmt_created, gmt_updated, fireware_version, package_number, last_package_size, 
    persist1, persist2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.nnlightctl.po.FirewareUploadRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from nnlightctl_fireware_upload_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from nnlightctl_fireware_upload_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from nnlightctl_fireware_upload_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.nnlightctl.po.FirewareUploadRecordExample" >
    delete from nnlightctl_fireware_upload_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nnlightctl.po.FirewareUploadRecord" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into nnlightctl_fireware_upload_record (gmt_created, gmt_updated, fireware_version, 
      package_number, last_package_size, persist1, 
      persist2)
    values (#{gmtCreated,jdbcType=TIMESTAMP}, #{gmtUpdated,jdbcType=TIMESTAMP}, #{firewareVersion,jdbcType=VARCHAR}, 
      #{packageNumber,jdbcType=SMALLINT}, #{lastPackageSize,jdbcType=TINYINT}, #{persist1,jdbcType=VARCHAR}, 
      #{persist2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nnlightctl.po.FirewareUploadRecord" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into nnlightctl_fireware_upload_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="gmtCreated != null" >
        gmt_created,
      </if>
      <if test="gmtUpdated != null" >
        gmt_updated,
      </if>
      <if test="firewareVersion != null" >
        fireware_version,
      </if>
      <if test="packageNumber != null" >
        package_number,
      </if>
      <if test="lastPackageSize != null" >
        last_package_size,
      </if>
      <if test="persist1 != null" >
        persist1,
      </if>
      <if test="persist2 != null" >
        persist2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="gmtCreated != null" >
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdated != null" >
        #{gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="firewareVersion != null" >
        #{firewareVersion,jdbcType=VARCHAR},
      </if>
      <if test="packageNumber != null" >
        #{packageNumber,jdbcType=SMALLINT},
      </if>
      <if test="lastPackageSize != null" >
        #{lastPackageSize,jdbcType=TINYINT},
      </if>
      <if test="persist1 != null" >
        #{persist1,jdbcType=VARCHAR},
      </if>
      <if test="persist2 != null" >
        #{persist2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nnlightctl.po.FirewareUploadRecordExample" resultType="java.lang.Integer" >
    select count(*) from nnlightctl_fireware_upload_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update nnlightctl_fireware_upload_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreated != null" >
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtUpdated != null" >
        gmt_updated = #{record.gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.firewareVersion != null" >
        fireware_version = #{record.firewareVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.packageNumber != null" >
        package_number = #{record.packageNumber,jdbcType=SMALLINT},
      </if>
      <if test="record.lastPackageSize != null" >
        last_package_size = #{record.lastPackageSize,jdbcType=TINYINT},
      </if>
      <if test="record.persist1 != null" >
        persist1 = #{record.persist1,jdbcType=VARCHAR},
      </if>
      <if test="record.persist2 != null" >
        persist2 = #{record.persist2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update nnlightctl_fireware_upload_record
    set id = #{record.id,jdbcType=BIGINT},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_updated = #{record.gmtUpdated,jdbcType=TIMESTAMP},
      fireware_version = #{record.firewareVersion,jdbcType=VARCHAR},
      package_number = #{record.packageNumber,jdbcType=SMALLINT},
      last_package_size = #{record.lastPackageSize,jdbcType=TINYINT},
      persist1 = #{record.persist1,jdbcType=VARCHAR},
      persist2 = #{record.persist2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nnlightctl.po.FirewareUploadRecord" >
    update nnlightctl_fireware_upload_record
    <set >
      <if test="gmtCreated != null" >
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdated != null" >
        gmt_updated = #{gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="firewareVersion != null" >
        fireware_version = #{firewareVersion,jdbcType=VARCHAR},
      </if>
      <if test="packageNumber != null" >
        package_number = #{packageNumber,jdbcType=SMALLINT},
      </if>
      <if test="lastPackageSize != null" >
        last_package_size = #{lastPackageSize,jdbcType=TINYINT},
      </if>
      <if test="persist1 != null" >
        persist1 = #{persist1,jdbcType=VARCHAR},
      </if>
      <if test="persist2 != null" >
        persist2 = #{persist2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nnlightctl.po.FirewareUploadRecord" >
    update nnlightctl_fireware_upload_record
    set gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_updated = #{gmtUpdated,jdbcType=TIMESTAMP},
      fireware_version = #{firewareVersion,jdbcType=VARCHAR},
      package_number = #{packageNumber,jdbcType=SMALLINT},
      last_package_size = #{lastPackageSize,jdbcType=TINYINT},
      persist1 = #{persist1,jdbcType=VARCHAR},
      persist2 = #{persist2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>