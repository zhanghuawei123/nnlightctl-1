<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nnlightctl.dao.WorkOrderMapper" >
  <resultMap id="BaseResultMap" type="com.nnlightctl.po.WorkOrder" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP" />
    <result column="gmt_updated" property="gmtUpdated" jdbcType="TIMESTAMP" />
    <result column="serial_number" property="serialNumber" jdbcType="VARCHAR" />
    <result column="classify" property="classify" jdbcType="TINYINT" />
    <result column="nnlightctl_workflower_id" property="nnlightctlWorkflowerId" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="priority" property="priority" jdbcType="TINYINT" />
    <result column="nnlightctl_region_id" property="nnlightctlRegionId" jdbcType="BIGINT" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="nnlightctl_workflower_move_record_id" property="nnlightctlWorkflowerMoveRecordId" jdbcType="BIGINT" />
    <result column="nnlightctl_masker_id" property="nnlightctlMaskerId" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="attach_file_path" property="attachFilePath" jdbcType="VARCHAR" />
    <result column="work_source" property="workSource" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, gmt_created, gmt_updated, serial_number, classify, nnlightctl_workflower_id, 
    state, priority, nnlightctl_region_id, address, nnlightctl_workflower_move_record_id, 
    nnlightctl_masker_id, content, attach_file_path, work_source
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.nnlightctl.po.WorkOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from nnlightctl_work_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from nnlightctl_work_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from nnlightctl_work_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.nnlightctl.po.WorkOrderExample" >
    delete from nnlightctl_work_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nnlightctl.po.WorkOrder" >
    insert into nnlightctl_work_order (id, gmt_created, gmt_updated, 
      serial_number, classify, nnlightctl_workflower_id, 
      state, priority, nnlightctl_region_id, 
      address, nnlightctl_workflower_move_record_id, 
      nnlightctl_masker_id, content, attach_file_path, 
      work_source)
    values (#{id,jdbcType=BIGINT}, #{gmtCreated,jdbcType=TIMESTAMP}, #{gmtUpdated,jdbcType=TIMESTAMP}, 
      #{serialNumber,jdbcType=VARCHAR}, #{classify,jdbcType=TINYINT}, #{nnlightctlWorkflowerId,jdbcType=BIGINT}, 
      #{state,jdbcType=TINYINT}, #{priority,jdbcType=TINYINT}, #{nnlightctlRegionId,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{nnlightctlWorkflowerMoveRecordId,jdbcType=BIGINT}, 
      #{nnlightctlMaskerId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{attachFilePath,jdbcType=VARCHAR}, 
      #{workSource,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.nnlightctl.po.WorkOrder" >
    insert into nnlightctl_work_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="gmtCreated != null" >
        gmt_created,
      </if>
      <if test="gmtUpdated != null" >
        gmt_updated,
      </if>
      <if test="serialNumber != null" >
        serial_number,
      </if>
      <if test="classify != null" >
        classify,
      </if>
      <if test="nnlightctlWorkflowerId != null" >
        nnlightctl_workflower_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="nnlightctlRegionId != null" >
        nnlightctl_region_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="nnlightctlWorkflowerMoveRecordId != null" >
        nnlightctl_workflower_move_record_id,
      </if>
      <if test="nnlightctlMaskerId != null" >
        nnlightctl_masker_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="attachFilePath != null" >
        attach_file_path,
      </if>
      <if test="workSource != null" >
        work_source,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="gmtCreated != null" >
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdated != null" >
        #{gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="serialNumber != null" >
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="classify != null" >
        #{classify,jdbcType=TINYINT},
      </if>
      <if test="nnlightctlWorkflowerId != null" >
        #{nnlightctlWorkflowerId,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=TINYINT},
      </if>
      <if test="nnlightctlRegionId != null" >
        #{nnlightctlRegionId,jdbcType=BIGINT},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="nnlightctlWorkflowerMoveRecordId != null" >
        #{nnlightctlWorkflowerMoveRecordId,jdbcType=BIGINT},
      </if>
      <if test="nnlightctlMaskerId != null" >
        #{nnlightctlMaskerId,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="attachFilePath != null" >
        #{attachFilePath,jdbcType=VARCHAR},
      </if>
      <if test="workSource != null" >
        #{workSource,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nnlightctl.po.WorkOrderExample" resultType="java.lang.Integer" >
    select count(*) from nnlightctl_work_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update nnlightctl_work_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreated != null" >
        gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtUpdated != null" >
        gmt_updated = #{record.gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.serialNumber != null" >
        serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.classify != null" >
        classify = #{record.classify,jdbcType=TINYINT},
      </if>
      <if test="record.nnlightctlWorkflowerId != null" >
        nnlightctl_workflower_id = #{record.nnlightctlWorkflowerId,jdbcType=BIGINT},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.priority != null" >
        priority = #{record.priority,jdbcType=TINYINT},
      </if>
      <if test="record.nnlightctlRegionId != null" >
        nnlightctl_region_id = #{record.nnlightctlRegionId,jdbcType=BIGINT},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.nnlightctlWorkflowerMoveRecordId != null" >
        nnlightctl_workflower_move_record_id = #{record.nnlightctlWorkflowerMoveRecordId,jdbcType=BIGINT},
      </if>
      <if test="record.nnlightctlMaskerId != null" >
        nnlightctl_masker_id = #{record.nnlightctlMaskerId,jdbcType=BIGINT},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.attachFilePath != null" >
        attach_file_path = #{record.attachFilePath,jdbcType=VARCHAR},
      </if>
      <if test="record.workSource != null" >
        work_source = #{record.workSource,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update nnlightctl_work_order
    set id = #{record.id,jdbcType=BIGINT},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_updated = #{record.gmtUpdated,jdbcType=TIMESTAMP},
      serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      classify = #{record.classify,jdbcType=TINYINT},
      nnlightctl_workflower_id = #{record.nnlightctlWorkflowerId,jdbcType=BIGINT},
      state = #{record.state,jdbcType=TINYINT},
      priority = #{record.priority,jdbcType=TINYINT},
      nnlightctl_region_id = #{record.nnlightctlRegionId,jdbcType=BIGINT},
      address = #{record.address,jdbcType=VARCHAR},
      nnlightctl_workflower_move_record_id = #{record.nnlightctlWorkflowerMoveRecordId,jdbcType=BIGINT},
      nnlightctl_masker_id = #{record.nnlightctlMaskerId,jdbcType=BIGINT},
      content = #{record.content,jdbcType=VARCHAR},
      attach_file_path = #{record.attachFilePath,jdbcType=VARCHAR},
      work_source = #{record.workSource,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nnlightctl.po.WorkOrder" >
    update nnlightctl_work_order
    <set >
      <if test="gmtCreated != null" >
        gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtUpdated != null" >
        gmt_updated = #{gmtUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="serialNumber != null" >
        serial_number = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="classify != null" >
        classify = #{classify,jdbcType=TINYINT},
      </if>
      <if test="nnlightctlWorkflowerId != null" >
        nnlightctl_workflower_id = #{nnlightctlWorkflowerId,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=TINYINT},
      </if>
      <if test="nnlightctlRegionId != null" >
        nnlightctl_region_id = #{nnlightctlRegionId,jdbcType=BIGINT},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="nnlightctlWorkflowerMoveRecordId != null" >
        nnlightctl_workflower_move_record_id = #{nnlightctlWorkflowerMoveRecordId,jdbcType=BIGINT},
      </if>
      <if test="nnlightctlMaskerId != null" >
        nnlightctl_masker_id = #{nnlightctlMaskerId,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="attachFilePath != null" >
        attach_file_path = #{attachFilePath,jdbcType=VARCHAR},
      </if>
      <if test="workSource != null" >
        work_source = #{workSource,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nnlightctl.po.WorkOrder" >
    update nnlightctl_work_order
    set gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_updated = #{gmtUpdated,jdbcType=TIMESTAMP},
      serial_number = #{serialNumber,jdbcType=VARCHAR},
      classify = #{classify,jdbcType=TINYINT},
      nnlightctl_workflower_id = #{nnlightctlWorkflowerId,jdbcType=BIGINT},
      state = #{state,jdbcType=TINYINT},
      priority = #{priority,jdbcType=TINYINT},
      nnlightctl_region_id = #{nnlightctlRegionId,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      nnlightctl_workflower_move_record_id = #{nnlightctlWorkflowerMoveRecordId,jdbcType=BIGINT},
      nnlightctl_masker_id = #{nnlightctlMaskerId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      attach_file_path = #{attachFilePath,jdbcType=VARCHAR},
      work_source = #{workSource,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>